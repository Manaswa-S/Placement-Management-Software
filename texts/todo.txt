update routesDoc file

get other details from user such as IP address to implement rate limiting and better security

Enable Go's pprof HTTP server for runtime profiling:

introduce concurrency

refresh token is useless as of now

handler functions are structured wrong, need to use gin.HandlerFunc

in myapplicants or similar pages, you might want to reduce the info directly in cards and instead direct to profile pages for info

the job update and new job into a single method is risky, also the way to judge between updation/insertion is stupid and dumb

have a check for external storage on startup

the ctx.Bind() internally sets a 400 error is not valid, that can be problematic or redundant

you would want to prompt the company to give a feedback when rejecting/etc a candidate

having separate representative email and user email is causing problems, change asap

we need to have a separate logic for async errors (errors outside of the request cycles), separate logging file, etc

the schedule interview modal is broken

the errors logic after errf.Type != errs.Internal is not set anywhere, like if the error is internal you need to do something

disable submit and other buttons after first click to avoid multiple submissions

when loggin, also log something to recognize the users based on our database, like the user name

if a page was not found, and the screen is not 500 internal error, if i refresh, it redirects me to the login page even though i am still logged in

sometimes, if the form was shared back in time, and accessed way later, it errors saying access not given

replace os.Getenv witht Lookupenv where ever neccessary to reduce empty variables

alot of db queries are unprotected ex. 'ApplicationStatusToAnd'

change the student profile setup to the company setup, which is better

make sure you can have only one interview per application at any given time

we havent accounted for sections in test forms

if i request a new email confirmation link, i can still access the old one

need to replace those queries for email data or something similar with one single global query

for everything there is not a check if the time for that event has gone by, i can still give tests that were meant to be over by yesterday

in the public.ConfirmSignup , we send a valid JWT token directly, which is ... stupid!

we can cancel interview even after it is completed

the rejected email is not being sent

the company is getting notifs like your application is rejected, its broken

there are alot of endpoints like /company/editcutoff that need to be rate limited heavily

in logger if 'explicit_error' is true, log it as CRITICAL error in a separate area

we'll need to consider using better email delivery options with better security and surity or atleast a fall back strategy

email sending services have rigourous rate limits, so we cannot send out alot of emails at once, maybe switch to the send-on-demand logic

there is very less type safety in the whole codebase, client can send anything and it will accept anything

using something like telegram for critical messages to the admins on their mobiles, for web based, our service is enough

custom 'alert' ui

need to attach all internal/critical errors to the context so that they can be logged

implement TTL to all data in redis for automatic cleanup

add a safety measure that saves all redis cache data before shutting down

none of our endpoints are type safe, you can send illegal data and it will still proceed, the checks are only for the client side

there is currently no mechanism to evaluate subjective questions

there should be a created_at in every table

you can send multiple extrainfo post requests from one link, it does not check for duplicates

new job form needs refactoring, there are redundant fields like company name and email, etc

start test, go back and change page, the test will never be submitted, the time might be up, but the end_time is never updated

restructure the template folder

alot of the earlier functions have alot of inefficiency that needs to be fixed\

rate limit on file uploads separately

change boiler plate names in email templates, etc

replace the 'var name struct' with new() asap

include profile pic feature for all

nice and smaller (size) favicon  

consider the fact that the browser caches test questions anyway, so whats the point of one-q-at a time

new test email, results, etc

Interview Conflict: Ensure that there is logic in place to check for conflicts before scheduling an interview.
Rescheduling: Provide a way for the company to reschedule the interview in case of an issue 

the myapplicants page refreshes EVERYTHING everytime an action is performed (shortlist/ etc)

later on add edit functions in applications

user cannot apply for any further jobs when he has been hired for atleast one job and similar constraints

set a timer to delete the rejected/offered/hired applications after 7 days



















there should be a notifications thing for every role

the interview process should be variable

after singup as admin it still sends a company extra info , the methods consider only two roles (company or student) and misbehave for anything else
